name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mkdir -p ~/.gnupg
          chmod 700 ~/.gnupg
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          chmod 600 ~/.gnupg/gpg.conf

          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo RELOADAGENT | gpg-connect-agent

      - name: Set Git identity
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          version: latest
          args: release --clean
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GORELEASER_KEY_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_FINGERPRINT: ${{ secrets.GPG_FINGERPRINT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: |
          mkdir -p dist
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/terraform-provider-ansible_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Zip
        run: |
          cd dist
          zip terraform-provider-ansible_${{ matrix.goos }}_${{ matrix.goarch }}.zip terraform-provider-ansible_${{ matrix.goos }}_${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-provider-ansible-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*.zip